(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{452:function(t,a,s){"use strict";s.r(a);var n=s(25),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h4",{attrs:{id:"_1-请说出下列最终的执行结果-并解释为什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-请说出下列最终的执行结果-并解释为什么"}},[t._v("#")]),t._v(" 1 请说出下列最终的执行结果，并解释为什么")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   \n")])])]),a("p",[t._v("输出10，a和i是全局变量，在调用a"),a("a",{attrs:{href:""}},[t._v("6")]),t._v("函数是，i值已经是循环10次之后的值")]),t._v(" "),a("h4",{attrs:{id:"_2-请说出下列最终的执行结果-并解释为什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-请说出下列最终的执行结果-并解释为什么"}},[t._v("#")]),t._v(" 2 请说出下列最终的执行结果，并解释为什么")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tmp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tmp\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("报错 tpm is not defined  在if下面的块级作用域中，会先在此作用域中将tmp进行变量提升\n但是在es6中，let声明的tmp提升到块顶部，但是还没有进行赋值操作，会报错")]),t._v(" "),a("h4",{attrs:{id:"_3-结合es6新语法-用最简单的方式找出数组中的最小值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-结合es6新语法-用最简单的方式找出数组中的最小值"}},[t._v("#")]),t._v(" 3 结合ES6新语法，用最简单的方式找出数组中的最小值")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 答案")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n")])])]),a("h4",{attrs:{id:"_4-请详细说明var-let-const-三种声明变量的方式之间的具体差别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-请详细说明var-let-const-三种声明变量的方式之间的具体差别"}},[t._v("#")]),t._v(" 4 请详细说明var let const 三种声明变量的方式之间的具体差别")]),t._v(" "),a("ul",[a("li",[t._v("var是全局变量，不存在块级作用域,只有全局作用域和函数作用域")]),t._v(" "),a("li",[t._v("let和const存在块级作用域，块级作用域是访问不到的")]),t._v(" "),a("li",[t._v("let声明的变量可修改，const只能定义常亮，不可修改，切初始值不可为空")]),t._v(" "),a("li",[t._v("var存在变量提升，const和let存在暂时性死区")])]),t._v(" "),a("h4",{attrs:{id:"_5-请说出下列代码最终输出的结果-并解释为什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-请说出下列代码最终输出的结果-并解释为什么"}},[t._v("#")]),t._v(" 5 请说出下列代码最终输出的结果，并解释为什么")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("输出20 箭头函数中不改变this指向，即定义函数的时候this已经绑定\n即obj而不是window，而不是在执行函数的时候绑定")]),t._v(" "),a("h4",{attrs:{id:"_6-简述symbol类型的用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-简述symbol类型的用途"}},[t._v("#")]),t._v(" 6 简述Symbol类型的用途？")]),t._v(" "),a("ul",[a("li",[t._v("Symbol为一种新定义的数据类型，每个值都只有唯一的一个值")]),t._v(" "),a("li",[t._v("1 Symbol不能通过Object.keys或for...in 来枚举对象的属性名 所以，我们可以把一些不需要对外操作和访问的属性使用Symbol来定义")]),t._v(" "),a("li",[t._v("2 json.stringify会被排除在输出内容之外")])]),t._v(" "),a("h4",{attrs:{id:"_7-说说什么是浅拷贝-什么是深拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-说说什么是浅拷贝-什么是深拷贝"}},[t._v("#")]),t._v(" 7 说说什么是浅拷贝，什么是深拷贝")]),t._v(" "),a("ul",[a("li",[t._v("浅拷贝只是把对象的引用拷贝过来，在新的对象上操作会影响源对象")]),t._v(" "),a("li",[t._v("深拷贝是完全新定义一个指针，在把值拷贝过来，新的对象上操作不会影响原对象")]),t._v(" "),a("li",[t._v("一些深拷贝的常见方法 json.parse(JSON.stringify())  slice()  concat() 递归")])]),t._v(" "),a("h4",{attrs:{id:"_8-请简述typescript-与-javascript之间的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-请简述typescript-与-javascript之间的关系"}},[t._v("#")]),t._v(" 8 请简述TypeScript 与 JavaScript之间的关系")]),t._v(" "),a("ul",[a("li",[t._v("TypeScript是基于JavaScript上的语言")]),t._v(" "),a("li",[t._v("TypeScript是JavaScript的超集，在javaScript上多了一些类型系统和对es6的支持")]),t._v(" "),a("li",[t._v("TypeScript最终会被编译成原始的JavaScript")])]),t._v(" "),a("h4",{attrs:{id:"_9-请谈谈你所认为的typescript优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-请谈谈你所认为的typescript优点"}},[t._v("#")]),t._v(" 9 请谈谈你所认为的TypeScript优点")]),t._v(" "),a("ul",[a("li",[t._v("静态类型化，允许开发人员编写更健壮的代码并对其进行维护")]),t._v(" "),a("li",[t._v("大型的开发项目，使用TypeScript工具来进行重构更容易、便捷")]),t._v(" "),a("li",[t._v("类型安全，在编译期间即可检测错误")]),t._v(" "),a("li",[t._v("es6 自动完成和动态输入有助于开发任重提高工作效率")])]),t._v(" "),a("h4",{attrs:{id:"_10-描述引用计数的工作原理和优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-描述引用计数的工作原理和优缺点"}},[t._v("#")]),t._v(" 10 描述引用计数的工作原理和优缺点")]),t._v(" "),a("ul",[a("li",[t._v("设置引用数，判断当前引用数是否为0，为0时垃圾回收机制进行回收")]),t._v(" "),a("li",[t._v("引用关系改变时修改引用数字，当有数值引用时 +1 减少时 —1")]),t._v(" "),a("li",[t._v("通过判断引用数值是否为0来判断当前对象是否为一个垃圾")]),t._v(" "),a("li",[t._v("优点： 发现垃圾时立即回收，可以最大限度的尖山程序暂停")]),t._v(" "),a("li",[t._v("缺点：对循环引用的对象无法回收，引用计数算法的时间开销大")])]),t._v(" "),a("h4",{attrs:{id:"_11-描述标记整理算法的工作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-描述标记整理算法的工作流程"}},[t._v("#")]),t._v(" 11 描述标记整理算法的工作流程")]),t._v(" "),a("ul",[a("li",[t._v("标记整理算法可以看做是标记清除的增强")]),t._v(" "),a("li",[t._v("标记阶段的操作和标记清楚一致")]),t._v(" "),a("li",[t._v("清除阶段会先执行整理，移动对象位置")])]),t._v(" "),a("h4",{attrs:{id:"_12-描述v8中新生代存储区垃圾回收的流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-描述v8中新生代存储区垃圾回收的流程"}},[t._v("#")]),t._v(" 12 描述V8中新生代存储区垃圾回收的流程")]),t._v(" "),a("ul",[a("li",[t._v("V8内存空间一分为二（左侧为新生代储存）")]),t._v(" "),a("li",[t._v("小空间用于存储新生代对象（32M|")]),t._v(" "),a("li",[t._v("使用空间为From，空闲空间为To")]),t._v(" "),a("li",[t._v("活动对象存储于From空间")]),t._v(" "),a("li",[t._v("标记整理后将活动对象拷贝至To")])]),t._v(" "),a("h4",{attrs:{id:"_13-描述增量标记算法在何时使用及工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-描述增量标记算法在何时使用及工作原理"}},[t._v("#")]),t._v(" 13 描述增量标记算法在何时使用及工作原理")]),t._v(" "),a("ul",[a("li",[t._v("在V8清除老生代对象时为提高清除效率优化时使用")])])])}),[],!1,null,null,null);a.default=r.exports}}]);