(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{338:function(t,a,s){t.exports=s.p+"assets/img/engineering.32796a8c.png"},402:function(t,a,s){"use strict";s.r(a);var r=s(25),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"前端工程化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化"}},[t._v("#")]),t._v(" 前端工程化")]),t._v(" "),a("p",[t._v("前端工程化是指遵循一定的标准和规范，通过工具去提高效率降低成本的一种手段。\n近年来，前端要求不断提高，业务逻辑日益复杂。做为当下互联网时代不可或缺的技术，前端可以说是占据了整个开发行业的半壁江山，从传统的网站到现在h5、移动app、桌面应用以及小程序，前端技术几乎是无所不能的全面覆盖。在这些表象的背后，其实是前端行业对开发人员的要求发生了翻天覆地的变化。以前的套模板，调页面已经满足不了当下的开发形式了。\n没有工程化之前面临的问题：")]),t._v(" "),a("ul",[a("li",[t._v("使用ES6心特性，兼容有问题")]),t._v(" "),a("li",[t._v("想要使用Less/Sass/PostCSS 增强CSS的编程性，但是运行环境不能直接支持")]),t._v(" "),a("li",[t._v("使用模块化、组件化提高项目的可维护性，但运行环境不能直接支持")]),t._v(" "),a("li",[t._v("部署上线前需要手动压缩代码及资源文件。部署过程需要手动上传到服务器，重复的机械式工作")]),t._v(" "),a("li",[t._v("多人协作开发，无法硬性统一大家的代码风格。从从库中pull回来的代码质量无法保证")]),t._v(" "),a("li",[t._v("部分功能需要等待后端服务接口提前完成")]),t._v(" "),a("li",[t._v("整体依赖后端项目")])]),t._v(" "),a("h3",{attrs:{id:"工程化的表现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工程化的表现"}},[t._v("#")]),t._v(" 工程化的表现")]),t._v(" "),a("p",[t._v("一切以提高效率、降低成本、质量保证为目的的手段都属于工程化")]),t._v(" "),a("div",{staticClass:"language-flow extra-class"},[a("pre",{pre:!0,attrs:{class:"language-flow"}},[a("code",[t._v("st"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Start\nop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("operation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Your Operation\ncond"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("condition"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Yes or No"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\ne"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("end\n\nst"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("op"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("cond\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cond")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("yes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("e\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cond")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("op\n")])])]),a("ul",[a("li",[t._v("创建项目\n"),a("ul",[a("li",[t._v("使用脚手架工具创建项目结构")]),t._v(" "),a("li",[t._v("使用脚手架工具创建特定类型文件")]),t._v(" "),a("li",[t._v("使用脚手架工具完成基础结构的搭建")])])]),t._v(" "),a("li",[t._v("编码（借助工程化的工具自动化的去完成以下事情）\n"),a("ul",[a("li",[t._v("格式化代码")]),t._v(" "),a("li",[t._v("校验代码风格")]),t._v(" "),a("li",[t._v("编译/ 构建/ 打包（编译工具）")])])]),t._v(" "),a("li",[t._v("预览/测试\n"),a("ul",[a("li",[t._v("Web Server (热更新) / Mock（假接口）")]),t._v(" "),a("li",[t._v("Live Reloading / HMR")]),t._v(" "),a("li",[t._v("Source Map(定位问题)")])])]),t._v(" "),a("li",[t._v("提交\n"),a("ul",[a("li",[t._v("Git Hooks（自动化的在项目提交之前做项目整体的检查）项目质量，代码风格的检查  git log做限制")]),t._v(" "),a("li",[t._v("Lint-staged")]),t._v(" "),a("li",[t._v("持续集成")])])]),t._v(" "),a("li",[t._v("部署\n"),a("ul",[a("li",[t._v("CI / CD")]),t._v(" "),a("li",[t._v("自动发布 （避免人为发布造成的一些失误）")])])])]),t._v(" "),a("h3",{attrs:{id:"工程化-某个工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工程化-某个工具"}},[t._v("#")]),t._v(" 工程化 != 某个工具")]),t._v(" "),a("p",[t._v("工程化的核心是对项目整体的一种规划或者架构，工具只是帮我们实现和落地这种规划的一种手段。\n"),a("img",{attrs:{src:s(338),alt:"我的头像"}})]),t._v(" "),a("p",[t._v("一些官方提供的工程化方案")]),t._v(" "),a("ul",[a("li",[t._v("creat-react-app")]),t._v(" "),a("li",[t._v("vue-cli")]),t._v(" "),a("li",[t._v("angular-cli")]),t._v(" "),a("li",[t._v("gatsby-cli")])]),t._v(" "),a("h3",{attrs:{id:"工程化与node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工程化与node-js"}},[t._v("#")]),t._v(" 工程化与node.js")]),t._v(" "),a("p",[t._v("Powered by Node.js")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("脚手架工具开发")]),t._v(" "),a("li",[t._v("自动化构建系统")]),t._v(" "),a("li",[t._v("模块化打包")]),t._v(" "),a("li",[t._v("项目代码规范化")]),t._v(" "),a("li",[t._v("自动化部署")])])]),t._v(" "),a("h3",{attrs:{id:"其他打包工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他打包工具"}},[t._v("#")]),t._v(" 其他打包工具")]),t._v(" "),a("h4",{attrs:{id:"rollup、webpack、parcel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rollup、webpack、parcel"}},[t._v("#")]),t._v(" Rollup、webpack、parcel")]),t._v(" "),a("ul",[a("li",[t._v("rollup小巧很多，rollup是一款esmodule打包器，没有其他额外功能，高效的esmodule打包器，输出结果更加扁平，自动移除未引用代码，打包结果依然完全可读。加载非esm模块比较复杂，无法热替换，依赖AMD库")]),t._v(" "),a("li",[t._v("wabpack 功能更加齐全，大二全。比如热替换")]),t._v(" "),a("li",[t._v("parcel 傻瓜式使用体验，前端打包器，零配置，")])])])}),[],!1,null,null,null);a.default=v.exports}}]);