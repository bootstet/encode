(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{411:function(t,a,n){"use strict";n.r(a);var s=n(25),e=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h4",{attrs:{id:"yeoman的基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yeoman的基本使用"}},[t._v("#")]),t._v(" yeoman的基本使用")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  # 全局安装yo模块\n  yarn global add yo \n  # 安装genetator-node 模块\n  yarn global add generator-node\n  # 去相应文件夹建立相应生成器 生成什么模块  generator yo后面的名字\n  yo node\n")])])]),a("h4",{attrs:{id:"sub-generator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sub-generator"}},[t._v("#")]),t._v(" sub generator")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  yo node:cli\n")])])]),a("p",[t._v("重写packjson 文件 yes")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  yarn link  // link到全局范围 全局可用\n\n  yarn // 安装操作\n\n  yeoman --help  // 运行模块\n")])])]),a("h4",{attrs:{id:"yeoman使用-步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yeoman使用-步骤"}},[t._v("#")]),t._v(" yeoman使用  步骤")]),t._v(" "),a("ul",[a("li",[t._v("明确你的需求")]),t._v(" "),a("li",[t._v("找到合适的Generator")]),t._v(" "),a("li",[t._v("全局范围安装找到的Generator")]),t._v(" "),a("li",[t._v("通过Yo运行对应的Generator")]),t._v(" "),a("li",[t._v("通过命令行交互添加选项")]),t._v(" "),a("li",[t._v("生成你所需要的项目结构")])]),t._v(" "),a("h4",{attrs:{id:"创建generator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建generator"}},[t._v("#")]),t._v(" 创建Generator")]),t._v(" "),a("ul",[a("li",[t._v("generator需要在根目录下有一个generator文件夹\n├── generators/       .......... 生成器目录\n│   └── app/      .............. 默认生成器目录\n│    └── index.js    ........... 默认生成器实现\n└── package.json  .............. 模块包配置文件")]),t._v(" "),a("li",[t._v("generator-"),a("name")],1),t._v(" "),a("li",[t._v("具体演示"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  mkdir genarator-sample\n  \n  cd generator-sample\\\n\n  yarn init\n\n  yarn add yroman-generator // 基类\n\n  // 打开目录 创建app/index.js\n  // index.js\n\n  \n\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此文件作为 Generator 的核心入口")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要导出一个继承自 Yeoman Generator 的类型")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Yeoman Generator 在工作时会自动调用我们在此类型中定义的一些生命周期方法")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们在这些方法中可以通过调用父类提供的一些工具方法实现一些功能，例如文件写入")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Generator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yeoman-generator'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("extands")]),t._v(" Generator "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// yeoman 自动在生成问价阶段调用次方法")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们这里尝试往项目目录中写入文件")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("destinationPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'temp.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"根据模板创建文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据模板创建文件"}},[t._v("#")]),t._v(" 根据模板创建文件")]),t._v(" "),a("p",[t._v("通过this.fs.copyTpl(tmpl, output, context) 去生成和模板语法规定好的文件，详见github上demo代码"),a("a",{attrs:{href:"https://github.com/bootstet/generator-sample",target:"_blank",rel:"noopener noreferrer"}},[t._v("github"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"接受用户输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接受用户输入"}},[t._v("#")]),t._v(" 接受用户输入")]),t._v(" "),a("p",[t._v("通过prompting () 方法\n详细配置用法说明见"),a("a",{attrs:{href:"https://github.com/bootstet/generator-sample",target:"_blank",rel:"noopener noreferrer"}},[t._v("github"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);